{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Downloads\\\\Dictionary-React-App-master\\\\Dictionary-React-App-master\\\\src\\\\components\\\\Meaning.js\";\nimport React from \"react\";\nimport Synonyms from \"./Synonyms\";\nimport \"../styles/Meaning.css\";\nimport Antonyms from \"./Antonyms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meaning(props) {\n  const {\n    partOfSpeech,\n    definitions\n  } = props.meanings;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Meaning\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: partOfSpeech\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), definitions.map((_ref, index) => {\n        let {\n          definition,\n          example,\n          synonyms,\n          antonyms\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"definition\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Def: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 41\n            }, this), definition]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this), example && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"example\",\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: example\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this), synonyms && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"synonyms\",\n            children: /*#__PURE__*/_jsxDEV(Synonyms, {\n              synonyms: synonyms\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 26\n          }, this), antonyms && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"antonyms\",\n            children: /*#__PURE__*/_jsxDEV(Antonyms, {\n              antonyms: antonyms\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 26\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_c = Meaning;\nvar _c;\n$RefreshReg$(_c, \"Meaning\");","map":{"version":3,"names":["React","Synonyms","Antonyms","jsxDEV","_jsxDEV","Meaning","props","partOfSpeech","definitions","meanings","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_ref","index","definition","example","synonyms","antonyms","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/Downloads/Dictionary-React-App-master/Dictionary-React-App-master/src/components/Meaning.js"],"sourcesContent":["import React from \"react\";\nimport Synonyms from \"./Synonyms\";\nimport \"../styles/Meaning.css\";\nimport Antonyms from \"./Antonyms\";\n\nexport default function Meaning(props) {\n  const { partOfSpeech, definitions } = props.meanings;\n\n  return (\n    <div className=\"Meaning\">\n      <section>\n        <h3>{partOfSpeech}</h3>\n        <hr />\n        {definitions.map(({ definition, example, synonyms, antonyms }, index) => (\n          <div key={index}>\n            <div className=\"definition\"><span>Def: </span>{definition}</div>\n            {example && <div className=\"example\"><em>{example}</em></div>}\n            {synonyms && <div className=\"synonyms\"><Synonyms synonyms={synonyms} /></div>}\n            {antonyms && <div className=\"antonyms\"><Antonyms antonyms={antonyms}/></div>}\n          </div>\n        ))}\n      </section>\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,uBAAuB;AAC9B,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,eAAe,SAASC,OAAOA,CAACC,KAAK,EAAE;EACrC,MAAM;IAAEC,YAAY;IAAEC;EAAY,CAAC,GAAGF,KAAK,CAACG,QAAQ;EAEpD,oBACEL,OAAA;IAAKM,SAAS,EAAC,SAAS;IAAAC,QAAA,eACtBP,OAAA;MAAAO,QAAA,gBACEP,OAAA;QAAAO,QAAA,EAAKJ;MAAY;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvBX,OAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACLP,WAAW,CAACQ,GAAG,CAAC,CAAAC,IAAA,EAA8CC,KAAK;QAAA,IAAlD;UAAEC,UAAU;UAAEC,OAAO;UAAEC,QAAQ;UAAEC;QAAS,CAAC,GAAAL,IAAA;QAAA,oBAC3Db,OAAA;UAAAO,QAAA,gBACEP,OAAA;YAAKM,SAAS,EAAC,YAAY;YAAAC,QAAA,gBAACP,OAAA;cAAAO,QAAA,EAAM;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EAACI,UAAU;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EAC/DK,OAAO,iBAAIhB,OAAA;YAAKM,SAAS,EAAC,SAAS;YAAAC,QAAA,eAACP,OAAA;cAAAO,QAAA,EAAKS;YAAO;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EAC5DM,QAAQ,iBAAIjB,OAAA;YAAKM,SAAS,EAAC,UAAU;YAAAC,QAAA,eAACP,OAAA,CAACH,QAAQ;cAACoB,QAAQ,EAAEA;YAAS;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EAC5EO,QAAQ,iBAAIlB,OAAA;YAAKM,SAAS,EAAC,UAAU;YAAAC,QAAA,eAACP,OAAA,CAACF,QAAQ;cAACoB,QAAQ,EAAEA;YAAS;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAJpEG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKV,CAAC;MAAA,CACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACQ,EAAA,GAnBuBlB,OAAO;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}